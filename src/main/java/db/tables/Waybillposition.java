/*
 * This file is generated by jOOQ.
 */
package db.tables;


import db.Indexes;
import db.Keys;
import db.Public;
import db.tables.records.WaybillpositionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Waybillposition extends TableImpl<WaybillpositionRecord> {

    private static final long serialVersionUID = 928569757;

    /**
     * The reference instance of <code>public.waybillposition</code>
     */
    public static final Waybillposition WAYBILLPOSITION = new Waybillposition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WaybillpositionRecord> getRecordType() {
        return WaybillpositionRecord.class;
    }

    /**
     * The column <code>public.waybillposition.waybillsid</code>.
     */
    public final TableField<WaybillpositionRecord, Integer> WAYBILLSID = createField("waybillsid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.waybillposition.price</code>.
     */
    public final TableField<WaybillpositionRecord, Integer> PRICE = createField("price", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.waybillposition.nomenclature</code>.
     */
    public final TableField<WaybillpositionRecord, String> NOMENCLATURE = createField("nomenclature", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.waybillposition.quantity</code>.
     */
    public final TableField<WaybillpositionRecord, Integer> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.waybillposition</code> table reference
     */
    public Waybillposition() {
        this(DSL.name("waybillposition"), null);
    }

    /**
     * Create an aliased <code>public.waybillposition</code> table reference
     */
    public Waybillposition(String alias) {
        this(DSL.name(alias), WAYBILLPOSITION);
    }

    /**
     * Create an aliased <code>public.waybillposition</code> table reference
     */
    public Waybillposition(Name alias) {
        this(alias, WAYBILLPOSITION);
    }

    private Waybillposition(Name alias, Table<WaybillpositionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Waybillposition(Name alias, Table<WaybillpositionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Waybillposition(Table<O> child, ForeignKey<O, WaybillpositionRecord> key) {
        super(child, key, WAYBILLPOSITION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WAYBILLPOSITION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WaybillpositionRecord> getPrimaryKey() {
        return Keys.WAYBILLPOSITION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WaybillpositionRecord>> getKeys() {
        return Arrays.<UniqueKey<WaybillpositionRecord>>asList(Keys.WAYBILLPOSITION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WaybillpositionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WaybillpositionRecord, ?>>asList(Keys.WAYBILLPOSITION__WAYBILLPOSITION_WAYBILLSID_FKEY);
    }

    public Waybills waybills() {
        return new Waybills(this, Keys.WAYBILLPOSITION__WAYBILLPOSITION_WAYBILLSID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Waybillposition as(String alias) {
        return new Waybillposition(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Waybillposition as(Name alias) {
        return new Waybillposition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Waybillposition rename(String name) {
        return new Waybillposition(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Waybillposition rename(Name name) {
        return new Waybillposition(name, null);
    }
}
